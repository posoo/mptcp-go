name: Build and Releasea Binaries

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24' 

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build binaries
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        # Create build directory
        mkdir -p build
        
        # Build all binaries using a loop
        for cmd in server client webserver; do
          echo "Building $cmd..."
          go build -ldflags="-s -w" -o build/$cmd-${{ matrix.goos }}-${{ matrix.goarch }}${EXT} ./cmd/$cmd
        done

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
        path: build/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Move artifacts to release directory
      run: |
        mkdir -p release
        find artifacts -name "*" -type f -exec cp {} release/ \;

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
        tag_name: dev-latest
        name: dev-${{ github.sha }}
        body: "Automated build from commit ${{ github.sha }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}